
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dbdueopvtlanxgumenpu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRiZHVlb3B2dGxhbnhndW1lbnB1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5NzQ0NTIsImV4cCI6MjA1NTU1MDQ1Mn0.lPPbNJANU8Zc7i5OB9_atgDZ84Yp5SBjXCiIqjA79Tk";

// État global de l'application
export const APP_STATE = {
  isOfflineMode: false,
  setOfflineMode: (value: boolean) => {
    APP_STATE.isOfflineMode = value;
    localStorage.setItem('OFFLINE_MODE', value ? 'true' : 'false');
    // Dispatch un événement storage pour que les autres onglets soient notifiés
    window.dispatchEvent(new StorageEvent('storage', {
      key: 'OFFLINE_MODE',
      newValue: value ? 'true' : 'false'
    }));
  },
  logSupabaseError: (error: any) => {
    console.error("Erreur Supabase:", error);
  }
};

// Fonctions utilitaires
export const handleProfileQuery = async (userId: string) => {
  return supabase
    .from('profiles')
    .select('*')
    .eq('id', userId)
    .single();
};

export const checkSupabaseConnection = async () => {
  try {
    const { data } = await supabase.from('profiles').select('count').limit(1);
    return !!data;
  } catch (error) {
    console.error("Erreur de connexion à Supabase:", error);
    return false;
  }
};

export const preloadSession = async () => {
  try {
    const { data } = await supabase.auth.getSession();
    return { session: data.session };
  } catch (error) {
    console.error("Erreur lors du préchargement de la session:", error);
    return { session: null };
  }
};

// Type pour les réponses des fonctions Edge
export type EdgeFunctionResponse<T> = {
  data: T;
  error: null;
} | {
  data: null;
  error: {
    message: string;
  };
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);
