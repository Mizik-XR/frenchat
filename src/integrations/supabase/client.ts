
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dbdueopvtlanxgumenpu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRiZHVlb3B2dGxhbnhndW1lbnB1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk5NzQ0NTIsImV4cCI6MjA1NTU1MDQ1Mn0.lPPbNJANU8Zc7i5OB9_atgDZ84Yp5SBjXCiIqjA79Tk";

// Export SITE_URL for OAuth redirects
export const SITE_URL = typeof window !== 'undefined' 
  ? `${window.location.protocol}//${window.location.host}`
  : "http://localhost:5173";

// Préchargement de la session Supabase
export const preloadSession = async () => {
  try {
    await supabase.auth.getSession();
    console.log("Session Supabase préchargée");
  } catch (error) {
    console.error("Erreur de préchargement de session Supabase:", error);
  }
};

// Création du client avec des options optimisées
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      storageKey: 'supabase.auth.token'
    },
    global: {
      fetch: (...args) => {
        // @ts-ignore - Nous ignorons l'erreur de type pour la propriété cache
        args[1] = {
          ...args[1],
          cache: args[0].toString().includes('auth/') ? 'no-cache' : 'default'
        };
        return fetch(...args);
      }
    }
  }
);

// Précharger la session dès que possible si nous sommes dans un navigateur
if (typeof window !== 'undefined') {
  // Préchargement non-bloquant
  setTimeout(preloadSession, 0);
}
