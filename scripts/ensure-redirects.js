
// Script pour s'assurer que le fichier _redirects est copi√© dans le dossier de build
const fs = require('fs');
const path = require('path');

// Fonction pour copier un fichier
function copyFile(source, destination) {
  try {
    if (fs.existsSync(source)) {
      const content = fs.readFileSync(source, 'utf8');
      
      // S'assurer que le r√©pertoire de destination existe
      const dir = path.dirname(destination);
      if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
      }
      
      fs.writeFileSync(destination, content);
      console.log(`‚úÖ Fichier copi√© avec succ√®s: ${source} -> ${destination}`);
      return true;
    } else {
      console.warn(`‚ùå Le fichier source n'existe pas: ${source}`);
      return false;
    }
  } catch (error) {
    console.error(`‚ùå Erreur lors de la copie du fichier: ${error.message}`);
    return false;
  }
}

// V√©rifier si le dossier dist existe
if (!fs.existsSync('dist')) {
  console.warn('‚ö†Ô∏è Le dossier dist n\'existe pas encore, ignor√©.');
  process.exit(0);
}

// Copier le fichier _redirects dans le dossier dist
if (!copyFile('_redirects', 'dist/_redirects')) {
  // Si le fichier n'existe pas √† la racine, le cr√©er dans dist
  console.log('üîÑ Cr√©ation du fichier _redirects dans dist...');
  fs.writeFileSync('dist/_redirects', '/* /index.html 200\n');
  console.log('‚úÖ Fichier _redirects cr√©√© dans dist.');
}

// Copier le fichier _headers dans le dossier dist si n√©cessaire
copyFile('scripts/_headers', 'dist/_headers') || 
copyFile('_headers', 'dist/_headers');

// V√©rifier si index.html utilise des chemins absolus pour les assets
try {
  const indexPath = 'dist/index.html';
  if (fs.existsSync(indexPath)) {
    let htmlContent = fs.readFileSync(indexPath, 'utf8');
    
    // V√©rifier si des chemins absolus sont pr√©sents
    if (htmlContent.includes('href="/assets') || htmlContent.includes('src="/assets')) {
      console.log('üîÑ Conversion des chemins absolus en chemins relatifs dans index.html...');
      
      // Remplacer les chemins absolus par des chemins relatifs
      htmlContent = htmlContent.replace(/href="\/assets/g, 'href="./assets');
      htmlContent = htmlContent.replace(/src="\/assets/g, 'src="./assets');
      
      fs.writeFileSync(indexPath, htmlContent);
      console.log('‚úÖ Chemins convertis avec succ√®s dans index.html.');
    } else {
      console.log('‚úÖ Aucun chemin absolu trouv√© dans index.html, ignorer.');
    }
  }
} catch (error) {
  console.error(`‚ùå Erreur lors de la v√©rification des chemins d'acc√®s: ${error.message}`);
}

console.log('‚úÖ V√©rification des fichiers de d√©ploiement Netlify termin√©e.');
